@using CoreDemo.Models
@model UserSignUpViewModel
@{
    ViewData["Title"] = "Kayıt Ekranı";
}
<!DOCTYPE html>
<html>

<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Kayıt Ekranı</title>

    <link href="~/inspinia-gh-pages/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/inspinia-gh-pages/font-awesome/css/font-awesome.css" rel="stylesheet">
    <link href="~/inspinia-gh-pages/css/plugins/iCheck/custom.css" rel="stylesheet">
    <link href="~/inspinia-gh-pages/css/animate.css" rel="stylesheet">
    <link href="~/inspinia-gh-pages/css/style.css" rel="stylesheet">

</head>

<body class="gray-bg">

    <div class="middle-box text-center loginscreen   animated fadeInDown">
        <div>
            <div>

                <h6 class="logo-name">IN+</h6>

            </div>
            <h3>Kayıt Ekranı</h3>
            <p>Yeni bir hesap oluşturun.</p>
            <form class="m-t" role="form" method="post">
                <div class="form-group">
                    <input type="text" class="form-control" name="nameSurname" placeholder="Adınız Soyadınız">
                    @Html.ValidationMessageFor(m => m.nameSurname, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="email" class="form-control" name="Mail" placeholder="Email" required>
                    @Html.ValidationMessageFor(m => m.Mail, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" name="UserName" placeholder="Kullanıcı Adınız">
                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="password" class="form-control" name="Password" placeholder="Şifre">
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="password" class="form-control" name="ConfirmPassword" placeholder="Şifre Tekrar">
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="checkbox i-checks"><label> <input type="checkbox"><i></i> Kullanım şartlarını okudum. Kabul ediyorum. </label></div>
                </div>
                <button type="submit" class="btn btn-primary block full-width m-b">Kayıt Ol</button>

                <p class="text-muted text-center"><small>Zaten bir hesabınız var mı?</small></p>
                <a class="btn btn-sm btn-white btn-block" href="/RegisterUser/Login">Giriş Yap</a>

                <input asp-for="ModelProperty" />
                <div class="text-danger" asp-validation-summary="ModelOnly"></div>
            </form>
            <p class="m-t"> <small>Asp.Net Core 7.0 Proje Kampı | Tüm Hakları Saklıdır. &copy; @DateTime.Now.Year</small> </p>
        </div>
    </div>

    <!-- Mainly scripts -->
    <script src="~/inspinia-gh-pages/js/jquery-3.1.1.min.js"></script>
    <script src="~/inspinia-gh-pages/js/popper.min.js"></script>
    <script src="~/inspinia-gh-pages/js/bootstrap.js"></script>
    <!-- iCheck -->
    <script src="~/inspinia-gh-pages/js/plugins/iCheck/icheck.min.js"></script>
    <script>$(document).ready(function () {
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
        });</script>
</body>

</html>
